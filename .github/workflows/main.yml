name: Publish

on:
  push:
    tags:
      - v*

jobs:

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macOS-latest]
    
    steps:
    - uses: actions/checkout@master

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'

    - name: pip install
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: pyinstall
      run: pyinstaller "FakemonCreator.spec"

    - name: add artifact win
      uses: actions/upload-artifact@master
      if: matrix.os == 'windows-latest'
      with:
          name: build-win
          path: "./dist/Fakemon.Creator.WIN.exe"

    - name: add artifact osx
      if: matrix.os == 'macOS-latest'
      uses: actions/upload-artifact@master
      with:
          name: build-osx
          path: "./dist/Fakemon.Creator.OSX.zip"

  make_release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Create Release
        uses: frankjuniorr/github-create-release-action@master
        secrets: GITHUB_TOKEN

  upload:
    runs-on: ${{ matrix.os }}
    needs: [make_release, build]
    steps:
      - uses: actions/checkout@master

      - name: download artifact win
        uses: actions/download-artifact@master
        with:
          name: build-win

      - name: download artifact osx
        uses: actions/download-artifact@master
        with:
          name: build-osx

      - name: unzip win
        run: gunzip -c ./build-win

      - name: unzip osx
        run: gunzip -c ./build-osx

      - name: upload win
        secrets: GITHUB_TOKEN
        uses: "JasonEtco/upload-to-release@master"
        args: "./Fakemon.Creator.WIN.exe"

      - name: upload osx
        secrets: GITHUB_TOKEN
        uses: "JasonEtco/upload-to-release@master"
        args: "./Fakemon.Creator.OSX.zip"

